module.exports.config = {
    name: "help",
    version: "1.1.1",
    hasPermssion: 0,
    credits: "DC-Nam",//mod l·∫°i by t√°o t√°o
    description: "Xem danh s√°ch l·ªánh v√† info",
    commandCategory: "Danh s√°ch l·ªánh",
    usages: "[t√™n l·ªánh/all]",
    cooldowns: 5
};
module.exports.languages = {
    "vi": {},
    "en": {}
}
module.exports.run = async function({
    api,
    event,
    args,
  Currencies,
  __GLOBAL
}) {
const { events } = global.client;
  const time = process.uptime(),
		hours = Math.floor(time / (60 * 60)),
		minutes = Math.floor((time % (60 * 60)) / 60),
		seconds = Math.floor(time % 60);
  var z_1 = (hours < 10) ? '0' + hours : hours;
    var x_1 = (minutes < 10) ? '0' + minutes : minutes;
    var y_1 = (seconds < 10) ? '0' + seconds : seconds;
const moment = require("moment-timezone");
  const timeNow = moment.tz("Asia/Ho_Chi_Minh").format("DD/MM/YYYY || HH:mm:ss");
  const { commands } = global.client;
    const {
        threadID: tid,
        messageID: mid,
        senderID: sid
    } = event
    var type = !args[0] ? "" : args[0].toLowerCase()
    var msg = "",
        array = [],
        i = 0
    const cmds = global.client.commands
    const TIDdata = global.data.threadData.get(tid) || {}
    var prefix = TIDdata.PREFIX || global.config.PREFIX
    if (type == "all") {
        for (const cmd of cmds.values()) {
            msg += `[${++i}]-> ${cmd.config.name}: ${cmd.config.description}\n-----------------------\n`
        }
        return api.sendMessage(msg, tid, mid)
    }
    if (type == "all") return
    if (type) {
        for (const cmd of cmds.values()) {
            array.push(cmd.config.name.toString())
        }
        if (!array.find(n => n == args[0].toLowerCase())) {
            const stringSimilarity = require('string-similarity')
            commandName = args.shift().toLowerCase() || ""
            var allCommandName = [];
            const commandValues = cmds['keys']()
            for (const cmd of commandValues) allCommandName.push(cmd)
            const checker = stringSimilarity.findBestMatch(commandName, allCommandName)
            if (checker.bestMatch.rating >= 0.5) command = client.commands.get(checker.bestMatch.target)
            msg = `=== „Äé HELP „Äè ===\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n[‚ú®] ‚ûú Kh√¥ng t√¨m th·∫•y l·ªánh '${type}' trong h·ªá th·ªëng.\n[‚ú®] ‚ûú L·ªánh g·∫ßn gi·ªëng ƒë∆∞·ª£c t√¨m th·∫•y '${checker.bestMatch.target}'`
            api.sendMessage(msg, tid, mid)
        }
        const cmd = cmds.get(type).config
        msg = `[üß∏] ‚ûú ùóßùó≤ÃÇùóª: ${cmd.name} ( ${cmd.version} )\n[üîó] ‚ûú ùó§ùòÇùòÜùó≤ÃÇÃÄùóª ùóµùóÆÃ£ùóª: ${TextPr(cmd.hasPermssion)}\n[üë§] ‚ûú ùóßùóÆÃÅùó∞ ùó¥ùó∂ùóÆÃâ: ${cmd.credits}\n[üí¨] ‚ûú ùó†ùóºÃÇ ùòÅùóÆÃâ: ${cmd.description}\n[üß©] ‚ûú ùóßùóµùòÇùóºÃ£ÃÇùó∞ ùóªùóµùóºÃÅùó∫: ${cmd.commandCategory}\n[üåü] ‚ûú ùóñùóÆÃÅùó∞ùóµ ùòÄùòÇÃõÃâ ùó±ùòÇÃ£ùóªùó¥: ${cmd.usages}\n[‚è∞] ‚ûú ùóßùóµùóºÃõÃÄùó∂ ùó¥ùó∂ùóÆùóª ùó∞ùóµùóºÃõÃÄ: ${cmd.cooldowns}s`
        api.sendMessage(msg, tid, mid)
    } else {
        CmdCategory()
        array.sort(S("nameModule"))
        for (const cmd of array) {
          msg1 = `======„Äé ùóõùóòùóüùó£ ùóñùó¢ùó†ùó†ùóîùó°ùóó „Äè======\n\n`
            msg += `[üíù] ‚ûú ùóßùóµùòÇùóºÃÇÃ£ùó∞ ùó°ùóµùóºÃÅùó∫: ${cmd.cmdCategory.toUpperCase()}\n[üß∏] ‚ûú ùóßùóºÃÇÃâùóªùó¥: ${cmd.nameModule.length} ùóπùó≤Ã£ÃÇùóªùóµ\n[‚ú®]‚ûú ùóüùó≤Ã£ÃÇùóªùóµ ùóªùóÆÃÄùòÜ ùóæùòÇùòÜùó≤ÃÇÃÄùóª ùóµùóÆÃ£ùóª ùóªùó¥ùòÇÃõùóºÃõÃÄùó∂ ùóµùóÆÃ£ùóª ùóªùó¥ùòÇÃõùóºÃõÃÄùó∂ ùó∞ùóºÃÅ ùòÅùóµùó≤ÃÇÃâ ùó±ùòÇÃÄùóªùó¥: ${TextPr(cmd.permission)}\n[üîé] ‚ûú ùóñùóÆÃÅùó∞ ùóπùó≤Ã£ÃÇùóªùóµ: ${cmd.nameModule.join(", ")}\n\n`
        }
        msg += `[üîó] ‚ûú ùó¶ùóºÃÇÃÅ ùóπùó≤ÃÇÃ£ùóªùóµ ùóµùó∂ùó≤ÃÇÃ£ùóª ùòÅùóÆÃ£ùó∂ ùóØùóºùòÅ ƒëùóÆùóªùó¥ ùó∞ùóºÃÅ: ${cmds.size}\n[üòª] ‚ûú ùóïùóÆÃ£ùóª ùòÅùóµùóÆÃâ ùó∞ùóÆÃâùó∫ ùòÖùòÇÃÅùó∞ "‚ù§Ô∏è" ùóªùó≤ÃÇÃÅùòÇ ùó∫ùòÇùóºÃÇÃÅùóª ùòÖùó≤ùó∫ ùòÅùóµùóºÃÇùóªùó¥ ùòÅùó∂ùóª ùóµùó≤ÃÇÃ£ ùòÅùóµùóºÃÇÃÅùóªùó¥ ùóØùóºùòÅ\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n[üíú] ‚ûú ùóñùóÆÃÅùó∞ùóµ ùòÄùòÇÃõÃâ ùó±ùòÇÃ£ùóªùó¥: ùó±ùòÇÃÄùóªùó¥ "${prefix}ùóµùó≤ùóπùóΩ + ùòÅùó≤ÃÇùóª ùóπùó≤ÃÇÃ£ùóªùóµ" ƒëùó≤ÃÇÃâ ùòÖùó≤ùó∫ ùó∞ùóµùó∂ ùòÅùó∂ùó≤ÃÇÃÅùòÅ ùó∞ùóÆÃÅùó∞ùóµ ùó±ùòÇÃÄùóªùó¥ ùóπùó≤ÃÇÃ£ùóªùóµ\n[üíô] ‚ûú ùóñùóÆÃÅùó∞ùóµ ùòÄùòÇÃõÃâ ùó±ùòÇÃ£ùóªùó¥: ùó±ùòÇÃÄùóªùó¥ "${prefix}ùóµùó≤ùóπùóΩ ùóÆùóπùóπ" ƒëùó≤ÃÇÃâ ùòÖùó≤ùó∫ ùóÆùóπùóπ ùóπùó≤ÃÇÃ£ùóªùóµ ùó∞ùóºÃÅ ùòÅùóøùó≤ÃÇùóª ùóØùóºùòÅ\n\n‚è∞===„Äé ${timeNow} „Äè===‚è∞`
        api.sendMessage({body: msg1 + msg, attachment: (await global.nodemodule["axios"]({
url: (await global.nodemodule["axios"]('https://webapi.chaocacbannhe.repl.co/phongcanh')).data.data,
method: "GET",
responseType: "stream"
})).data
},event.threadID, (err, info) => {
    global.client.handleReaction.push({
      name: this.config.name, 
      messageID: info.messageID,
      author: event.senderID,
    })
    },event.messageID);
    }
  module.exports.handleReaction = async ({ event, api, handleReaction, Currencies, Users}) => {
const axios = global.nodemodule["axios"];
const fs = global.nodemodule["fs-extra"];
const { threadID, messageID, userID } = event;
if (event.userID != handleReaction.author) return;
if (event.reaction != "‚ù§") return; 
 api.unsendMessage(handleReaction.messageID);
        var msg = `===== [ ùóßùóõùó¢ÃÇùó°ùóö ùóßùóúùó° ùóïùó¢ùóß ] =====\n\n[üíÆ] ‚ûú ùóõùó∂ùó≤ÃÇÃ£ùóª ùòÅùóÆÃ£ùó∂ ùóØùóºùòÅ  ƒëùóÆÃÉ ùóºùóªùóπ ƒëùòÇÃõùóºÃõÃ£ùó∞ ${hours} ùóöùó∂ùóºÃõÃÄ ${minutes} ùó£ùóµùòÇÃÅùòÅ ${seconds} ùóöùó∂ùóÆÃÇùòÜ\n[‚öôÔ∏è] ‚ûú ùó£ùóµùó∂ùó≤ÃÇùóª ùóØùóÆÃâùóª ùóµùó∂ùó≤ÃÇÃ£ùóª ùòÅùóÆÃ£ùó∂ ùó∞ùòÇÃâùóÆ ùóØùóºùòÅ: ${global.config.version}\n[üîó] ‚ûú ùóßùóºÃÇÃâùóªùó¥ ùóπùó≤ÃÇÃ£ùóªùóµ: ${commands.size}\nüñ®Ô∏è ùóõùó∂ùó≤ÃÇÃ£ùóª ùòÅùóÆÃ£ùó∂ ùó∞ùóºÃÅ: ${events.size} ùóπùó≤ÃÇÃ£ùóªùóµ ùòÄùòÇÃõÃ£ ùó∏ùó∂ùó≤ÃÇÃ£ùóª\n[üë•] ‚ûú ùóßùóºÃÇÃâùóªùó¥ ùóªùó¥ùòÇÃõùóºÃõÃÄùó∂ ùó±ùòÇÃÄùóªùó¥: ${global.data.allUserID.length}\n[üèòÔ∏è] ‚ûú ùóßùóºÃÇÃâùóªùó¥ ùóªùóµùóºÃÅùó∫: ${global.data.allThreadID.length}\n[üíì] ‚ûú ùó£ùóøùó≤ùó≥ùó∂ùòÖ ùóØùóºùòÅ: ${prefix}`
        return api.sendMessage({body: msg, attachment: (await global.nodemodule["axios"]({
url: (await global.nodemodule["axios"]('https://webapi.chaocacbannhe.repl.co/phongcanh')).data.data,
method: "GET",
responseType: "stream"
})).data
},event.threadID); 
  }
    function CmdCategory() {
        for (const cmd of cmds.values()) {
            const {
                commandCategory,
                hasPermssion,
                name: nameModule
            } = cmd.config
            if (!array.find(i => i.cmdCategory == commandCategory)) {
                array.push({
                    cmdCategory: commandCategory,
                    permission: hasPermssion,
                    nameModule: [nameModule]
                })
            } else {
                const find = array.find(i => i.cmdCategory == commandCategory)
                find.nameModule.push(nameModule)
            }
        }
    }
}

function S(k) {
    return function(a, b) {
        let i = 0;
        if (a[k].length > b[k].length) {
            i = 1
        } else if (a[k].length < b[k].length) {
            i = -1
        }
        return i * -1
    }
}

function TextPr(permission) {
    p = permission
    return p == 0 ? "Th√†nh Vi√™n" : p == 1 ? "Qu·∫£n tr·ªã vi√™n" : p = 2 ? "ADMINBOT" : "To√†n Quy·ªÅn"
      }